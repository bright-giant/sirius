name: Build and Pubish
on:
  push:
    branches:
      - stable
      - master
      - master-sirius-5-sign
    paths-ignore:
      - '**/README.md'
      - 'sirius_doc/**/*'
jobs:
  distCLI:
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Zulu JDK
        uses: actions/setup-java@v1
        with:
          java-version: '15' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - name: Load Build properties
        uses: Reedyuk/read-properties@v1.0.1
        id: sirius_version
        with:
          path: './sirius_cli/src/main/resources/sirius_frontend.build.properties'
          property: 'de.unijena.bioinf.siriusFrontend.version'
      - name: Import Apple APP Code-signing ID and p12
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_APP_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_APP_CERTIFICATE_PWD }}
      - name: Check Identities
        run: /usr/bin/security find-identity
      - name: Gradle Build
        uses: eskatos/gradle-command-action@v1
        env:
          MACOS_APP_IDENTITY_ID: ${{ secrets.MACOS_APP_IDENTITY_ID }}
#          MACOS_KEYCHAIN: "~/Library/Keychains/signing_temp.keychain"
        with:
          gradle-version: 6.9
          build-root-directory: sirius_dist/sirius_cli_single_os
          arguments: clean publishSiriusPublicationToMavenLocal
      - name: Upload multiOS Source
        uses: actions/upload-artifact@v2
        with:
          name: "sirius-${{ steps.sirius_version.outputs.value }}-${{ runner.os }}-x86-64-headless-img"
          path: sirius_dist/sirius_cli_single_os/build/distributions/${{ runner.os == 'macOS' && 'sirius.app' || 'sirius' }}/

      - name: Upload Distributions
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: "sirius-${{ steps.sirius_version.outputs.value }}-${{ runner.os }}-x86-64-headless"
          path: |
            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.zip
            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.msi
            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.pkg
            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.deb
            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.sha256
#  distGUI:
#    strategy:
#      matrix:
#        os: [macos-latest]
##        os: [ubuntu-latest, windows-latest, macos-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Zulu JDK-FX
#        uses: actions/setup-java@v1
#        with:
#          java-version: '15' # The JDK version to make available on the path.
#          java-package: jdk+fx # (jre, jdk, or jdk+fx) - defaults to jdk
#          architecture: x64 # (x64 or x86) - defaults to x64
#      - name: Load Build properties
#        uses: Reedyuk/read-properties@v1.0.1
#        id: sirius_version
#        with:
#          path: './sirius_cli/src/main/resources/sirius_frontend.build.properties'
#          property: 'de.unijena.bioinf.siriusFrontend.version'
#      - name: Gradle Build
#        uses: eskatos/gradle-command-action@v1
#        with:
#          gradle-version: 6.9
#          build-root-directory: sirius_dist/sirius_gui_single_os
#          arguments: clean publishSiriusPublicationToMavenLocal
#      - name: Upload Distributions
#        uses: actions/upload-artifact@v2
#        with:
#          retention-days: 1
#          name: "sirius-${{ steps.sirius_version.outputs.value }}-${{ runner.os }}-x86-64"
#          path: |
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.zip
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.msi
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.pkg
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.deb
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.sha256


#  distMulti:
#    needs: distCLI
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Zulu JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '15' # The JDK version to make available on the path.
#          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
#          architecture: x64 # (x64 or x86) - defaults to x64
#      - name: Load Build properties
#        uses: Reedyuk/read-properties@v1.0.1
#        id: sirius_version
#        with:
#          path: './sirius_cli/src/main/resources/sirius_frontend.build.properties'
#          property: 'de.unijena.bioinf.siriusFrontend.version'
#
#      - uses: actions/download-artifact@v2
#        with:
#          name: "sirius-${{ steps.sirius_version.outputs.value }}-Linux-x86-64-headless-img"
#          path: sirius_dist/sirius_cli_multi_os/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-Linux-x86-64-headless-img
#      - uses: actions/download-artifact@v2
#        with:
#          name: "sirius-${{ steps.sirius_version.outputs.value }}-Windows-x86-64-headless-img"
#          path: sirius_dist/sirius_cli_multi_os/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-Windows-x86-64-headless-img
#      - uses: actions/download-artifact@v2
#        with:
#          name: "sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless-img"
#          path: sirius_dist/sirius_cli_multi_os/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless-img
#      - name: Display downloaded artifact files
#        run: ls -lah
#        working-directory: sirius_dist/sirius_cli_multi_os/build/tmp/artifacts/
#
#      - name: Gradle Build
#        uses: eskatos/gradle-command-action@v1
#        with:
#          gradle-version: 6.9
#          build-root-directory: sirius_dist/sirius_cli_multi_os
#          arguments: publishSiriusPublicationToMavenLocal
#      - name: Upload Distributions
#        uses: actions/upload-artifact@v2
#        with:
#          retention-days: 1
#          name: "sirius-${{ steps.sirius_version.outputs.value }}-multiOS-x86-64-headless"
#          path: |
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.zip
#            ~/.m2/repository/de/unijena/bioinf/ms/sirius/${{ steps.sirius_version.outputs.value }}/*.sha256
#      - name: Delete img artifacts
#        uses: geekyeggo/delete-artifact@v1
#        with:
#          name: |
#            sirius-${{ steps.sirius_version.outputs.value }}-Linux-x86-64-headless-img
#            sirius-${{ steps.sirius_version.outputs.value }}-Windows-x86-64-headless-img
#            sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless-img


  macosSign:
    needs: [ distCLI ]
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
#      - name: Set up Zulu JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '15' # The JDK version to make available on the path.
#          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
#          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Load Build properties
        uses: Reedyuk/read-properties@v1.0.1
        id: sirius_version
        with:
          path: './sirius_cli/src/main/resources/sirius_frontend.build.properties'
          property: 'de.unijena.bioinf.siriusFrontend.version'

      - uses: actions/download-artifact@v2
        with:
          name: "sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless"
          path: sirius_dist/build/tmp/artifacts/
#      - uses: actions/download-artifact@v2
#        with:
#          name: "sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64"
#          path: sirius_dist/build/tmp/artifacts/
      - name: Display downloaded artifact files
        run: ls -lah
        working-directory: sirius_dist/build/tmp/artifacts/

      # Install dependencies and build you app here #
      # - name: Build executable
      #     run: ---

      - name: Import Apple Code-signing
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      - name: Check Identities
        run: /usr/bin/security find-identity

      # using productsign hopefully covers signature of internal .app stuff.
      - name: Codesign pkg package
        env:
          VERSION: ${{ steps.sirius_version.outputs.value }}
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MACOS_TMP_KEYCHAIN_PWD: ${{ secrets.MACOS_TMP_KEYCHAIN_PWD }}
          MACOS_IDENTITY_ID: ${{ secrets.MACOS_IDENTITY_ID }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_APPLE_ID_PW: ${{ secrets.MACOS_APPLE_ID_PW }}
          APP_NAME: "sirius"
          APP_PATH_TARGET: "./sirius_dist/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless.pkg"
          APP_PATH_SOURCE: "./sirius_dist/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-osx64-headless.pkg"
        run: /usr/bin/productsign --timestamp --sign "$MACOS_IDENTITY_ID" "$APP_PATH_SOURCE" "$APP_PATH_TARGET"
#          zsh ./.github/scripts/mac-create-identity.zsh

      - name: Display signed artifact files
        run: ls -lah ./sirius_dist/build/tmp/artifacts
      - name: "Notarize Release Build"
        uses: GuillaumeFalourd/xcode-notarize@v1
        with:
          product-path: "./sirius_dist/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless.pkg"
          primary-bundle-id: "sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless.pkg"
          verbose: true
          appstore-connect-username: ${{ secrets.MACOS_APPLE_ID }}
          appstore-connect-password: ${{ secrets.MACOS_APPLE_ID_PW }}
      - name: "Staple Release Build"
        uses: devbotsxyz/xcode-staple@v1
        with:
          product-path: "./sirius_dist/build/tmp/artifacts/sirius-${{ steps.sirius_version.outputs.value }}-macOS-x86-64-headless.pkg"

      - name: Upload Distributions
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: "sirius-${{ steps.sirius_version.outputs.value }}-${{ runner.os }}-x86-64_SIGNED"
          path: ./sirius_dist/build/tmp/artifacts/sirius-$VERSION-macOS-x86-64-headless.pkg
#            ./sirius_dist/build/tmp/artifacts/sirius-$VERSION-macOS-x86-64.pkg
#            ./sirius_dist/build/tmp/artifacts/sirius-$VERSION-macOS-x86-64-headless.pkg
  release:
#    needs: [ distCLI, distGUI, distMulti, macosSign]
    needs: [ distCLI, macosSign]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Load Build properties
        uses: Reedyuk/read-properties@v1.0.1
        id: sirius_version
        with:
          path: './sirius_cli/src/main/resources/sirius_frontend.build.properties'
          property: 'de.unijena.bioinf.siriusFrontend.version'
      - uses: actions/download-artifact@v2
        with:
          path: sirius_dist/build/tmp/artifacts/
      - name: Display downloaded artifact files
        run: ls -lah
        working-directory: sirius_dist/build/tmp/artifacts/
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "sirius_dist/build/tmp/artifacts/*/*"
          body: "Prebuilt SIRIUS releases for all supported platforms."
          name: "SIRIUS v${{ steps.sirius_version.outputs.value }}"
          tag: "v${{ steps.sirius_version.outputs.value }}"
          prerelease: ${{ endsWith(steps.sirius_version.outputs.value, '-SNAPSHOT') }}
          allowUpdates: ${{ endsWith(steps.sirius_version.outputs.value, '-SNAPSHOT') }}
          draft: ${{ (env.GITHUB_REF_SLUG == 'stable' || env.GITHUB_REF_SLUG == 'master') && 'false' || 'true' }}
          token: ${{ secrets.GITHUB_TOKEN }}

